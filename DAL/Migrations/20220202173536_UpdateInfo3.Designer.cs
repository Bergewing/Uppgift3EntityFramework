// <auto-generated />
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20220202173536_UpdateInfo3")]
    partial class UpdateInfo3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAL.Campaigns", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PriceReduction")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("DAL.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentID"), 1L, 1);

                    b.Property<int>("Manager")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentID");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            DepartmentID = 1,
                            Manager = 1,
                            Name = "Dairy"
                        },
                        new
                        {
                            DepartmentID = 2,
                            Manager = 1,
                            Name = "Fruit&Vegetable"
                        },
                        new
                        {
                            DepartmentID = 3,
                            Manager = 2,
                            Name = "Pantry"
                        },
                        new
                        {
                            DepartmentID = 4,
                            Manager = 2,
                            Name = "Drink"
                        },
                        new
                        {
                            DepartmentID = 5,
                            Manager = 3,
                            Name = "Bread"
                        },
                        new
                        {
                            DepartmentID = 6,
                            Manager = 4,
                            Name = "Meat"
                        });
                });

            modelBuilder.Entity("DAL.DepartmentProducts", b =>
                {
                    b.Property<int>("ProductsID")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentID")
                        .HasColumnType("int");

                    b.HasKey("ProductsID", "DepartmentID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("DepartmentProducts");
                });

            modelBuilder.Entity("DAL.Email", b =>
                {
                    b.Property<string>("Emails")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.HasKey("Emails", "EmployeeID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Email");

                    b.HasData(
                        new
                        {
                            Emails = "soja@sojashandel.se",
                            EmployeeID = 1
                        },
                        new
                        {
                            Emails = "sojakarlsson123@msn.se",
                            EmployeeID = 6
                        },
                        new
                        {
                            Emails = "simon@Sojashandel.se",
                            EmployeeID = 2
                        },
                        new
                        {
                            Emails = "simon123@hotmail.com",
                            EmployeeID = 2
                        },
                        new
                        {
                            Emails = "ander321@msn.se",
                            EmployeeID = 3
                        },
                        new
                        {
                            Emails = "tobias567@hotmail.com",
                            EmployeeID = 3
                        },
                        new
                        {
                            Emails = "e.andersson@gmail.com",
                            EmployeeID = 4
                        },
                        new
                        {
                            Emails = "thomaserik@gmail.se",
                            EmployeeID = 5
                        });
                });

            modelBuilder.Entity("DAL.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"), 1L, 1);

                    b.Property<int>("EndDate")
                        .HasColumnType("int");

                    b.Property<int>("Mentor")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNr")
                        .HasColumnType("int");

                    b.Property<int>("SSN")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            EndDate = 10,
                            Mentor = 1,
                            Name = "Soja Karlsson",
                            PhoneNr = 700000001,
                            SSN = 1,
                            Title = "Manager"
                        },
                        new
                        {
                            EmployeeID = 2,
                            EndDate = 10,
                            Mentor = 1,
                            Name = "Simon Bergewing",
                            PhoneNr = 700000002,
                            SSN = 2,
                            Title = "Manager"
                        },
                        new
                        {
                            EmployeeID = 3,
                            EndDate = 10,
                            Mentor = 1,
                            Name = "Anders Andersson",
                            PhoneNr = 700000003,
                            SSN = 3,
                            Title = "Employee"
                        },
                        new
                        {
                            EmployeeID = 4,
                            EndDate = 10,
                            Mentor = 1,
                            Name = "Tobias Persson",
                            PhoneNr = 700000004,
                            SSN = 4,
                            Title = "Employee"
                        },
                        new
                        {
                            EmployeeID = 5,
                            EndDate = 10,
                            Mentor = 1,
                            Name = "Erika Andersson",
                            PhoneNr = 700000005,
                            SSN = 5,
                            Title = "Trainee"
                        },
                        new
                        {
                            EmployeeID = 6,
                            EndDate = 10,
                            Mentor = 1,
                            Name = "Thomas Karlsson",
                            PhoneNr = 700000001,
                            SSN = 1,
                            Title = "Trainee"
                        });
                });

            modelBuilder.Entity("DAL.Ingredients", b =>
                {
                    b.Property<string>("Ingredient")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("ProductsID")
                        .HasColumnType("int");

                    b.HasKey("Ingredient", "ProductID");

                    b.HasIndex("ProductsID");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("DAL.Products", b =>
                {
                    b.Property<int>("ProductsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductsID"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("Barcode")
                        .HasColumnType("int");

                    b.Property<int>("CampaignsID")
                        .HasColumnType("int");

                    b.Property<int>("ExpirationDate")
                        .HasColumnType("int");

                    b.Property<int>("InventoryByID")
                        .HasColumnType("int");

                    b.Property<int>("InventoryDate")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductsID");

                    b.HasIndex("InventoryByID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductsID = 1,
                            Amount = 10,
                            Barcode = 1,
                            CampaignsID = 0,
                            ExpirationDate = 123,
                            InventoryByID = 1,
                            InventoryDate = 123,
                            Price = 15.0,
                            ProductName = "6 pack Eggs"
                        },
                        new
                        {
                            ProductsID = 2,
                            Amount = 5,
                            Barcode = 2,
                            CampaignsID = 0,
                            ExpirationDate = 321,
                            InventoryByID = 2,
                            InventoryDate = 321,
                            Price = 10.0,
                            ProductName = "Onion in Net"
                        },
                        new
                        {
                            ProductsID = 3,
                            Amount = 9,
                            Barcode = 3,
                            CampaignsID = 0,
                            ExpirationDate = 555,
                            InventoryByID = 3,
                            InventoryDate = 777,
                            Price = 25.0,
                            ProductName = "Cornflakes"
                        },
                        new
                        {
                            ProductsID = 4,
                            Amount = 25,
                            Barcode = 4,
                            CampaignsID = 0,
                            ExpirationDate = 456,
                            InventoryByID = 4,
                            InventoryDate = 345,
                            Price = 20.0,
                            ProductName = "Coca-cola"
                        },
                        new
                        {
                            ProductsID = 5,
                            Amount = 3,
                            Barcode = 5,
                            CampaignsID = 0,
                            ExpirationDate = 345,
                            InventoryByID = 5,
                            InventoryDate = 234,
                            Price = 17.0,
                            ProductName = "Toast"
                        },
                        new
                        {
                            ProductsID = 6,
                            Amount = 5,
                            Barcode = 6,
                            CampaignsID = 0,
                            ExpirationDate = 999,
                            InventoryByID = 6,
                            InventoryDate = 888,
                            Price = 80.0,
                            ProductName = "Riby Eye"
                        });
                });

            modelBuilder.Entity("DAL.DepartmentProducts", b =>
                {
                    b.HasOne("DAL.Department", "department")
                        .WithMany("Products")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Products", "products")
                        .WithMany("Departments")
                        .HasForeignKey("ProductsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");

                    b.Navigation("products");
                });

            modelBuilder.Entity("DAL.Email", b =>
                {
                    b.HasOne("DAL.Employee", "Employee")
                        .WithMany("Emails")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DAL.Ingredients", b =>
                {
                    b.HasOne("DAL.Products", "products")
                        .WithMany("Ingredients")
                        .HasForeignKey("ProductsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("products");
                });

            modelBuilder.Entity("DAL.Products", b =>
                {
                    b.HasOne("DAL.Employee", "InventoryBy")
                        .WithMany("Products")
                        .HasForeignKey("InventoryByID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventoryBy");
                });

            modelBuilder.Entity("DAL.Department", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DAL.Employee", b =>
                {
                    b.Navigation("Emails");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("DAL.Products", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
