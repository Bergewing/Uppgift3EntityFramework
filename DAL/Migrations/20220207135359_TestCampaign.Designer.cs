// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(StoreContext))]
    [Migration("20220207135359_TestCampaign")]
    partial class TestCampaign
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DAL.Campaigns", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PriceReduction")
                        .HasColumnType("float");

                    b.HasKey("ID");

                    b.ToTable("Campaigns");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "RegularPrice",
                            PriceReduction = 0.0
                        },
                        new
                        {
                            ID = 2,
                            Name = "Test",
                            PriceReduction = 1.0
                        });
                });

            modelBuilder.Entity("DAL.Department", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ManagerID")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.HasIndex("ManagerID");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            Name = "Dairy",
                            ManagerID = 1
                        },
                        new
                        {
                            Name = "Fruit&Vegetable",
                            ManagerID = 1
                        },
                        new
                        {
                            Name = "Pantry",
                            ManagerID = 2
                        },
                        new
                        {
                            Name = "Drink",
                            ManagerID = 2
                        },
                        new
                        {
                            Name = "Bread",
                            ManagerID = 3
                        },
                        new
                        {
                            Name = "Meat",
                            ManagerID = 4
                        });
                });

            modelBuilder.Entity("DAL.DepartmentProducts", b =>
                {
                    b.Property<int>("ProductsID")
                        .HasColumnType("int");

                    b.Property<string>("DepartmentID")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ProductsID", "DepartmentID");

                    b.HasIndex("DepartmentID");

                    b.ToTable("DepartmentProducts");

                    b.HasData(
                        new
                        {
                            ProductsID = 1,
                            DepartmentID = "Dairy"
                        },
                        new
                        {
                            ProductsID = 2,
                            DepartmentID = "Fruit&Vegetable"
                        },
                        new
                        {
                            ProductsID = 3,
                            DepartmentID = "Pantry"
                        },
                        new
                        {
                            ProductsID = 4,
                            DepartmentID = "Drink"
                        },
                        new
                        {
                            ProductsID = 5,
                            DepartmentID = "Bread"
                        },
                        new
                        {
                            ProductsID = 6,
                            DepartmentID = "Meat"
                        },
                        new
                        {
                            ProductsID = 5,
                            DepartmentID = "Meat"
                        });
                });

            modelBuilder.Entity("DAL.Email", b =>
                {
                    b.Property<string>("Emails")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.HasKey("Emails", "EmployeeID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("Email");

                    b.HasData(
                        new
                        {
                            Emails = "soja@sojashandel.se",
                            EmployeeID = 1
                        },
                        new
                        {
                            Emails = "sojakarlsson123@msn.se",
                            EmployeeID = 6
                        },
                        new
                        {
                            Emails = "simon@Sojashandel.se",
                            EmployeeID = 2
                        },
                        new
                        {
                            Emails = "simon123@hotmail.com",
                            EmployeeID = 2
                        },
                        new
                        {
                            Emails = "ander321@msn.se",
                            EmployeeID = 3
                        },
                        new
                        {
                            Emails = "tobias567@hotmail.com",
                            EmployeeID = 3
                        },
                        new
                        {
                            Emails = "e.andersson@gmail.com",
                            EmployeeID = 4
                        },
                        new
                        {
                            Emails = "thomaserik@gmail.se",
                            EmployeeID = 5
                        });
                });

            modelBuilder.Entity("DAL.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeID"), 1L, 1);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<int?>("MentorID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNr")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SSN")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeID");

                    b.HasIndex("MentorID");

                    b.HasIndex("SSN")
                        .IsUnique();

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            Name = "Soja Karlsson",
                            PhoneNr = "0700000001",
                            SSN = "0000000001",
                            Title = "Manager"
                        },
                        new
                        {
                            EmployeeID = 2,
                            Name = "Simon Bergewing",
                            PhoneNr = "0700000002",
                            SSN = "0000000002",
                            Title = "Manager"
                        },
                        new
                        {
                            EmployeeID = 3,
                            Name = "Anders Andersson",
                            PhoneNr = "0700000003",
                            SSN = "0000000003",
                            Title = "Employee"
                        },
                        new
                        {
                            EmployeeID = 4,
                            Name = "Tobias Persson",
                            PhoneNr = "0700000004",
                            SSN = "0000000004",
                            Title = "Employee"
                        },
                        new
                        {
                            EmployeeID = 5,
                            EndDate = new DateTime(2022, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MentorID = 1,
                            Name = "Erika Andersson",
                            PhoneNr = "0700000005",
                            SSN = "0000000005",
                            Title = "Trainee"
                        },
                        new
                        {
                            EmployeeID = 6,
                            EndDate = new DateTime(2022, 10, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            MentorID = 2,
                            Name = "Thomas Karlsson",
                            PhoneNr = "0700000006",
                            SSN = "0000000006",
                            Title = "Trainee"
                        });
                });

            modelBuilder.Entity("DAL.Ingredients", b =>
                {
                    b.Property<string>("Ingredient")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductsID")
                        .HasColumnType("int");

                    b.HasKey("Ingredient", "ProductsID");

                    b.HasIndex("ProductsID");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("DAL.Products", b =>
                {
                    b.Property<int>("ProductsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductsID"), 1L, 1);

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("Barcode")
                        .HasColumnType("int");

                    b.Property<int?>("CampaignsID")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("date");

                    b.Property<int>("InventoryByID")
                        .HasColumnType("int");

                    b.Property<DateTime>("InventoryDate")
                        .HasColumnType("date");

                    b.Property<decimal>("Price")
                        .HasColumnType("money");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductsID");

                    b.HasIndex("CampaignsID");

                    b.HasIndex("InventoryByID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductsID = 1,
                            Amount = 10,
                            Barcode = 1,
                            CampaignsID = 1,
                            ExpirationDate = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InventoryByID = 1,
                            InventoryDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 15m,
                            ProductName = "6 pack Eggs"
                        },
                        new
                        {
                            ProductsID = 2,
                            Amount = 5,
                            Barcode = 2,
                            CampaignsID = 1,
                            ExpirationDate = new DateTime(2022, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InventoryByID = 2,
                            InventoryDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 10m,
                            ProductName = "Onion in Net"
                        },
                        new
                        {
                            ProductsID = 3,
                            Amount = 9,
                            Barcode = 3,
                            CampaignsID = 1,
                            ExpirationDate = new DateTime(2022, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InventoryByID = 3,
                            InventoryDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 25m,
                            ProductName = "Cornflakes"
                        },
                        new
                        {
                            ProductsID = 4,
                            Amount = 25,
                            Barcode = 4,
                            CampaignsID = 1,
                            ExpirationDate = new DateTime(2023, 12, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InventoryByID = 4,
                            InventoryDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 20m,
                            ProductName = "Coca-cola"
                        },
                        new
                        {
                            ProductsID = 5,
                            Amount = 3,
                            Barcode = 5,
                            CampaignsID = 1,
                            ExpirationDate = new DateTime(2022, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InventoryByID = 5,
                            InventoryDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 17m,
                            ProductName = "Toast"
                        },
                        new
                        {
                            ProductsID = 6,
                            Amount = 5,
                            Barcode = 6,
                            CampaignsID = 2,
                            ExpirationDate = new DateTime(2023, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            InventoryByID = 6,
                            InventoryDate = new DateTime(2022, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 80m,
                            ProductName = "Rib Eye"
                        });
                });

            modelBuilder.Entity("DAL.Department", b =>
                {
                    b.HasOne("DAL.Employee", "Manager")
                        .WithMany()
                        .HasForeignKey("ManagerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("DAL.DepartmentProducts", b =>
                {
                    b.HasOne("DAL.Department", "Department")
                        .WithMany("Products")
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DAL.Products", "Products")
                        .WithMany("Departments")
                        .HasForeignKey("ProductsID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("DAL.Email", b =>
                {
                    b.HasOne("DAL.Employee", "Employee")
                        .WithMany("Emails")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DAL.Employee", b =>
                {
                    b.HasOne("DAL.Employee", "Mentor")
                        .WithMany("Trainees")
                        .HasForeignKey("MentorID");

                    b.Navigation("Mentor");
                });

            modelBuilder.Entity("DAL.Ingredients", b =>
                {
                    b.HasOne("DAL.Products", "products")
                        .WithMany("Ingredients")
                        .HasForeignKey("ProductsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("products");
                });

            modelBuilder.Entity("DAL.Products", b =>
                {
                    b.HasOne("DAL.Campaigns", "Campaigns")
                        .WithMany("Products")
                        .HasForeignKey("CampaignsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DAL.Employee", "InventoryBy")
                        .WithMany("Products")
                        .HasForeignKey("InventoryByID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Campaigns");

                    b.Navigation("InventoryBy");
                });

            modelBuilder.Entity("DAL.Campaigns", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DAL.Department", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("DAL.Employee", b =>
                {
                    b.Navigation("Emails");

                    b.Navigation("Products");

                    b.Navigation("Trainees");
                });

            modelBuilder.Entity("DAL.Products", b =>
                {
                    b.Navigation("Departments");

                    b.Navigation("Ingredients");
                });
#pragma warning restore 612, 618
        }
    }
}
